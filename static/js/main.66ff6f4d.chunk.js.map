{"version":3,"sources":["components/layouts/signedInLinks.js","store/actions/authActions.js","components/layouts/signOutLinks.js","components/layouts/navbar.js","components/dashboard/notifications.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signIn.js","components/auth/signUp.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","href","profile","initials","SignOutLinks","state","firebase","links","uid","signedInLinks","signOutLinks","Notifications","_ref","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projectSummary","Dashboard","_this$props","this","projectList","dashboard_notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreteProject","createProject","history","push","authorId","add","objectSpread","Date","App","navbar","exact","path","component","ProjectDetails","CreateProject","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66ff6f4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut} href=\"/\">Log Out</a></li>\r\n            <li><NavLink className=\"btn btn-floating pink lighten-1\" to=\"/\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      signOut: () => dispatch(signOut())\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err});\r\n        });\r\n    };\r\n};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SignOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default SignOutLinks;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport SignInLinks from './signedInLinks';\r\nimport SignOutLinks from './signOutLinks';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = ({notifications}) => {\r\n  return(\r\n      <div className=\"section\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Notifications</span>\r\n                <ul className=\"notifications\">\r\n                    {notifications && notifications.map(notification => {\r\n                        return(\r\n                            <li key={notification.id}>\r\n                                <span className=\"pink-text\">{notification.user} </span>\r\n                                <span>{notification.content}</span>\r\n                                <div className=\"grey-text note-date\">\r\n                                    {moment(notification.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return(\r\n      <div className=\"card z-depth-0 project-summary\">\r\n          <div className=\"card-content grey-text text-darken-3\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n              <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport ProjectSummary from './projectSummary';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectList;","import React, {Component} from 'react';\r\nimport Notifications from './notifications';\r\nimport ProjectList from '../projects/projectList';\r\nimport {connect} from \"react-redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {compose} from \"redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const {projects, auth, notifications} = this.props;\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/signin\"/>\r\n        }\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n//      projects: state.project.projects\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {compose} from \"redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if (!auth.uid) {\r\n        return <Redirect to=\"/signin\"/>\r\n    }\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action gret lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div content=\"container center\">\r\n                Loading Project...\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {signIn} from '../../store/actions/authActions';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div className=\"container\" onSubmit={this.handleSubmit}>\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div className=\"container\" onSubmit={this.handleSubmit}>\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      signUp: (newUser) => dispatch(signUp(newUser))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createProject} from '../../store/actions/projectActions';\r\n\r\nclass CreteProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/signin\"/>\r\n        }\r\n        return(\r\n            <div className=\"container\" onSubmit={this.handleSubmit}>\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreteProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            });\r\n        });\r\n    };\r\n};","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layouts/navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/projects/projectDetails';\nimport SignIn from './components/auth/signIn';\nimport SignUp from './components/auth/signUp';\nimport CreateProject from './components/projects/createProject';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n                    <Route path=\"/project/:id\" component={ProjectDetails}/>\n                    <Route path=\"/signin\" component={SignIn}/>\n                    <Route path=\"/signup\" component={SignUp}/>\n                    <Route path=\"/create\" component={CreateProject}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login Error!');\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed!'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Success!');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Sign Out Success!');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Sign Up Success!');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Sign Up Error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: 1, title: 'pasta', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium eos iusto minima, nulla placeat quas vel! Alias asperiores cumque dolorem eaque iusto nam nihil possimus! Fuga quisquam repellat suscipit voluptas.'},\r\n        {id: 2, title: 'pizza', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium eos iusto minima, nulla placeat quas vel! Alias asperiores cumque dolorem eaque iusto nam nihil possimus! Fuga quisquam repellat suscipit voluptas.'},\r\n        {id: 3, title: 'soup', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium eos iusto minima, nulla placeat quas vel! Alias asperiores cumque dolorem eaque iusto nam nihil possimus! Fuga quisquam repellat suscipit voluptas.'}\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('created project error:', action.err);\r\n            return state;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from \"redux-firestore\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n   auth: authReducer,\r\n   project: projectReducer,\r\n   firestore: firestoreReducer,\r\n   firebase: firebaseReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCGuBjAfUNpdbqO665YsURn3VbIN3jm7X4\",\r\n    authDomain: \"mario-shelly.firebaseapp.com\",\r\n    databaseURL: \"https://mario-shelly.firebaseio.com\",\r\n    projectId: \"mario-shelly\",\r\n    storageBucket: \"mario-shelly.appspot.com\",\r\n    messagingSenderId: \"969575151563\",\r\n    appId: \"1:969575151563:web:30e9666b04c7e494\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {getFirestore, reduxFirestore} from \"redux-firestore\";\nimport {getFirebase, reactReduxFirebase} from \"react-redux-firebase\";\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n\n\n"],"sourceRoot":""}